{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/textures/t3.jpg","webpack:///./src/components/glsl/fragment.glsl","webpack:///./src/components/glsl/vertex.glsl","webpack:///./src/App.vue?3075","webpack:///./src/App.vue","webpack:///./src/components/WebglComponent.vue","webpack:///./src/components/WebglComponent.vue?a261","webpack:///./src/components/WebglComponent.vue?ac96","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?eabf","webpack:///./src/main.ts","webpack:///./src/components/textures/t2.jpg","webpack:///./src/components/textures/t1.jpg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","ref","OrbitControls","setup","camera","scene","renderer","geometry","material","mesh","positions","coordinates","textures","gui","settings","raf","mesh2","currentIndex","nextIndex","composer","renderPass","bloomPass","container","time","setSize","getBoundingClientRect","width","height","setPixelRatio","devicePixelRatio","setCameraAspect","aspect","updateProjectionMatrix","swapTexture","uniforms","currentTexture","nextTexture","init","uProgress","uMix","cameraZ","wireframe","GUI","add","onChange","opacity","position","z","load","row","col","Float32Array","index","setXYZ","setAttribute","fragmentShader","default","vertexShader","uBloom","side","transparent","antialias","alpha","EffectComposer","RenderPass","UnrealBloomPass","addPass","renderToScreen","domElement","appendChild","mix","progress","duration","tl","gsap","timeline","delay","paused","onUpdate","updateDisplay","to","ease","strength","play","eventCallback","setTimeout","update","render","requestAnimationFrame","viewportHandler","addEventListener","destroy","cancelAnimationFrame","removeEventListener","components","WebglComponent","app","App","use","mount"],"mappings":"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","file":"js/app.d559663a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"img/t3.b841b6f6.jpg\";","export default \"#define GLSLIFY 1\\nvarying vec2 vCoordinates;\\nvarying vec3 vPos;\\nuniform sampler2D currentTexture;\\nuniform sampler2D nextTexture;\\nuniform float uMix;\\n// varying vec2 vUv;\\n\\nvoid main() {\\n  vec2 myUV = vec2(vCoordinates.x, vCoordinates.y);\\n  vec4 current = texture2D(currentTexture, myUV);\\n  vec4 next = texture2D(nextTexture, myUV);\\n  // gl_FragColor = vec4(vUv.x, vUv.y, 0.0, 1.0);\\n  // gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n  vec4 color = mix(current, next, smoothstep(0.0, 1.0, uMix));\\n\\n  float d = distance(vec3(vPos.x, vPos.y, 0.0), vec3(vPos));\\n\\n  // color.a -= d / 512.0 * 2.2;\\n  // color.a += map(0, 1, 0, distance(vec3(0.0, 0.0, 0.0), vCoordinates));\\n\\n  gl_FragColor = vec4(color);\\n}\\n\";","export default \"#define GLSLIFY 1\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0; }\\n\\nfloat mod289(float x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0; }\\n\\nvec4 permute(vec4 x) {\\n     return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nfloat permute(float x) {\\n     return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat taylorInvSqrt(float r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nvec4 grad4(float j, vec4 ip)\\n  {\\n  const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\\n  vec4 p,s;\\n\\n  p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\\n  p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\\n  s = vec4(lessThan(p, vec4(0.0)));\\n  p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\\n\\n  return p;\\n  }\\n\\n// (sqrt(5) - 1)/4 = F4, used once below\\n#define F4 0.309016994374947451\\n\\nfloat snoise(vec4 v)\\n  {\\n  const vec4  C = vec4( 0.138196601125011,  // (5 - sqrt(5))/20  G4\\n                        0.276393202250021,  // 2 * G4\\n                        0.414589803375032,  // 3 * G4\\n                       -0.447213595499958); // -1 + 4 * G4\\n\\n// First corner\\n  vec4 i  = floor(v + dot(v, vec4(F4)) );\\n  vec4 x0 = v -   i + dot(i, C.xxxx);\\n\\n// Other corners\\n\\n// Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)\\n  vec4 i0;\\n  vec3 isX = step( x0.yzw, x0.xxx );\\n  vec3 isYZ = step( x0.zww, x0.yyz );\\n//  i0.x = dot( isX, vec3( 1.0 ) );\\n  i0.x = isX.x + isX.y + isX.z;\\n  i0.yzw = 1.0 - isX;\\n//  i0.y += dot( isYZ.xy, vec2( 1.0 ) );\\n  i0.y += isYZ.x + isYZ.y;\\n  i0.zw += 1.0 - isYZ.xy;\\n  i0.z += isYZ.z;\\n  i0.w += 1.0 - isYZ.z;\\n\\n  // i0 now contains the unique values 0,1,2,3 in each channel\\n  vec4 i3 = clamp( i0, 0.0, 1.0 );\\n  vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\\n  vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\\n\\n  //  x0 = x0 - 0.0 + 0.0 * C.xxxx\\n  //  x1 = x0 - i1  + 1.0 * C.xxxx\\n  //  x2 = x0 - i2  + 2.0 * C.xxxx\\n  //  x3 = x0 - i3  + 3.0 * C.xxxx\\n  //  x4 = x0 - 1.0 + 4.0 * C.xxxx\\n  vec4 x1 = x0 - i1 + C.xxxx;\\n  vec4 x2 = x0 - i2 + C.yyyy;\\n  vec4 x3 = x0 - i3 + C.zzzz;\\n  vec4 x4 = x0 + C.wwww;\\n\\n// Permutations\\n  i = mod289(i);\\n  float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\\n  vec4 j1 = permute( permute( permute( permute (\\n             i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\\n           + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\\n           + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\\n           + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\\n\\n// Gradients: 7x7x6 points over a cube, mapped onto a 4-cross polytope\\n// 7*7*6 = 294, which is close to the ring size 17*17 = 289.\\n  vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\\n\\n  vec4 p0 = grad4(j0,   ip);\\n  vec4 p1 = grad4(j1.x, ip);\\n  vec4 p2 = grad4(j1.y, ip);\\n  vec4 p3 = grad4(j1.z, ip);\\n  vec4 p4 = grad4(j1.w, ip);\\n\\n// Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n  p4 *= taylorInvSqrt(dot(p4,p4));\\n\\n// Mix contributions from the five corners\\n  vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\\n  vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\\n  m0 = m0 * m0;\\n  m1 = m1 * m1;\\n  return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\\n               + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\\n\\n  }\\n\\nvarying vec2 vUv;\\nvarying vec2 vCoordinates;\\nvarying vec3 vPos;\\nuniform float time;\\nuniform float uProgress;\\nattribute vec3 aCoordinates;\\n\\nvoid main() {\\n  vUv = uv;  \\n  vCoordinates = aCoordinates.xy + snoise(vec4(\\n    aCoordinates.x - 1.0,\\n    aCoordinates.y + 1.0,\\n    uProgress / 1000.0,\\n    uProgress / 1000.0\\n  )) * uProgress / 100.0;\\n\\n  vec3 pos = position;\\n\\n  // pos.x = pos.x + ((sin(pos.y + (time / 10000.0))) * uProgress) ;\\n  pos.z = pos.z + ((sin(pos.x + (time / 100.0)) + 1.0) * uProgress) + ((sin(pos.y + (time / 100.0)) + 1.0) * uProgress) ;\\n\\n  vec4 mvPosition = modelViewMatrix * vec4(pos, 1.0);\\n\\n  gl_PointSize = 3.0 - (1.0 / - mvPosition.z);\\n  gl_Position = projectionMatrix * mvPosition;\\n\\n  vPos = pos;\\n}\\n\";","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=scss\"","<template>\n  <div class=\"app\">\n    <WebglComponent class=\"app__webgl\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport WebglComponent from '@/components/WebglComponent.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    WebglComponent,\n  },\n}\n</script>\n\n<style lang=\"scss\">\n[class*='app--'],\nbody {\n  overscroll-behavior: none;\n}\n\n.app {\n  @include get-all-space;\n\n  background-color: #1e1832;\n}\n\n.app__webgl {\n  @include get-all-space;\n\n  overflow: hidden;\n}\n</style>\n","<template>\n  <div class=\"webgl-component\" ref=\"container\"></div>\n</template>\n\n<script lang=\"ts\">\nimport gsap from 'gsap'\nimport { onMounted, onUnmounted, ref } from 'vue'\nimport * as THREE from 'three'\nimport t1 from './textures/t1.jpg'\nimport t2 from './textures/t2.jpg'\nimport t3 from './textures/t3.jpg'\nimport dat from 'dat.gui'\n\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js'\n\nimport glsl from 'glslify'\n\n// eslint-disable-next-line\nlet OrbitControls = require('three-orbit-controls')(THREE)\n\nexport default {\n  name: 'WebglComponent',\n  setup() {\n    const container = ref()\n    let time = 0\n    let camera, scene, renderer, geometry, material, mesh\n    let positions, coordinates\n    let textures\n    let gui, settings\n    let raf\n    let mesh2\n    let currentIndex, nextIndex\n    let composer, renderPass, bloomPass\n\n    const setSize = () => {\n      const { width, height } = container.value.getBoundingClientRect()\n\n      renderer.setPixelRatio(window.devicePixelRatio)\n\n      renderer.setSize(width, height)\n      composer.setSize(width, height)\n    }\n\n    const setCameraAspect = () => {\n      const { width, height } = container.value.getBoundingClientRect()\n\n      camera.aspect = width / height\n      camera.updateProjectionMatrix()\n    }\n\n    const swapTexture = (currentIndex, nextIndex) => {\n      material.uniforms.currentTexture.value = textures[currentIndex]\n      material.uniforms.nextTexture.value = textures[nextIndex]\n    }\n\n    const init = () => {\n      settings = {\n        uProgress: 0,\n        uMix: 0,\n        cameraZ: 126,\n        wireframe: false,\n      }\n      gui = new dat.GUI({ name: 'My GUI' })\n      gui.add(settings, 'uProgress', 0, 128, 0.1)\n      gui.add(settings, 'uMix', 0, 1, 0.01)\n      gui.add(settings, 'wireframe').onChange(() => {\n        mesh2.material.wireframe = settings.wireframe\n        mesh2.material.opacity = settings.wireframe ? 1.0 : 0.0\n      })\n      gui.add(settings, 'cameraZ', 0, 300, 1).onChange(() => {\n        camera.position.z = settings.cameraZ\n      })\n\n      const { width, height } = container.value.getBoundingClientRect()\n\n      camera = new THREE.PerspectiveCamera(70, width / height, 0.01, 10000)\n      camera.position.z = settings.cameraZ\n\n      camera.position.z = settings.cameraZ\n\n      scene = new THREE.Scene()\n\n      textures = [\n        new THREE.TextureLoader().load(t1),\n        new THREE.TextureLoader().load(t2),\n        new THREE.TextureLoader().load(t3),\n      ]\n\n      // geometry = new THREE.PlaneBufferGeometry(1.0, 1.0, 10.0, 10.0)\n      geometry = new THREE.BufferGeometry()\n\n      const row = 512\n      const col = 512\n\n      positions = new THREE.BufferAttribute(new Float32Array(row * col * 3), 3)\n      coordinates = new THREE.BufferAttribute(\n        new Float32Array(row * col * 3),\n        3\n      )\n\n      let index = 0\n      for (let i = row / -2.0; i < row / 2; i++) {\n        for (let j = col / -2.0; j < col / 2; j++) {\n          positions.setXYZ(index, i, j, -256.0) // between -256 and 256\n          coordinates.setXYZ(index, (i / 256.0 + 1) / 2, (j / 256 + 1) / 2, 0) // between 0 and 1\n          index++\n        }\n      }\n\n      geometry.setAttribute('position', positions)\n      geometry.setAttribute('aCoordinates', coordinates)\n\n      currentIndex = 0\n      nextIndex = 1\n\n      // material = new THREE.MeshNormalMaterial()\n      material = new THREE.ShaderMaterial({\n        fragmentShader: glsl(require('./glsl/fragment.glsl').default),\n        vertexShader: glsl(require('./glsl/vertex.glsl').default),\n        uniforms: {\n          time: { value: 1.0 },\n          currentTexture: { value: textures[currentIndex] },\n          nextTexture: { value: textures[nextIndex] },\n          uMix: { value: 0.0 },\n          uProgress: { value: null },\n          uBloom: { value: 0 },\n        },\n        side: THREE.DoubleSide,\n        transparent: true,\n      })\n      mesh = new THREE.Points(geometry, material)\n      scene.add(mesh)\n\n      mesh2 = new THREE.Mesh(\n        new THREE.BoxGeometry(512, 512, 512),\n        new THREE.MeshBasicMaterial({\n          opacity: 0.0,\n          transparent: true,\n          wireframe: settings.wireframe,\n        })\n      )\n\n      // scene.add(mesh2)\n\n      renderer = new THREE.WebGLRenderer({ antialias: false, alpha: true })\n      composer = new EffectComposer(renderer)\n\n      renderPass = new RenderPass(scene, camera)\n\n      bloomPass = new UnrealBloomPass(\n        new THREE.Vector2(width, height),\n        0.0,\n        0.5,\n        0.0\n      )\n\n      composer.addPass(renderPass)\n      composer.addPass(bloomPass)\n\n      bloomPass.renderToScreen = true\n\n      // OrbitControls\n      new OrbitControls(camera, renderer.domElement)\n\n      setSize()\n      container.value.appendChild(renderer.domElement)\n\n      const o = {\n        mix: 0,\n        progress: 0,\n      }\n\n      const duration = 1.4\n\n      const tl = gsap.timeline({\n        delay: 2,\n        paused: true,\n        onUpdate: () => {\n          settings.uMix = o.mix\n          settings.uProgress = o.progress\n          gui.updateDisplay()\n        },\n      })\n\n      tl.to(\n        o,\n        {\n          duration: duration / 2,\n          progress: 100,\n          ease: 'power4.easeIn',\n        },\n        '#start'\n      )\n\n      tl.to(\n        bloomPass,\n        {\n          duration: duration / 2,\n          strength: 0.5,\n          ease: 'power4.easeIn',\n        },\n        '#start'\n      )\n\n      tl.to(\n        o,\n        {\n          duration: duration * 1.5,\n          mix: 1,\n          ease: 'power4.easeOut',\n        },\n        `#start+=${duration * 0.2}`\n      )\n\n      tl.to(\n        o,\n        {\n          duration: duration / 2,\n          progress: 0,\n          ease: 'power4.easeOut',\n        },\n        `#start+=${1.5 + duration * 0.75}`\n      )\n\n      tl.to(\n        bloomPass,\n        {\n          duration: duration / 2,\n          strength: 0,\n          ease: 'power4.easeOut',\n        },\n        `#start+=${1.5 + duration * 0.75}`\n      )\n\n      tl.play()\n\n      tl.eventCallback('onComplete', () => {\n        currentIndex = nextIndex\n        nextIndex = currentIndex > textures.length - 2 ? 0 : currentIndex + 1\n\n        setTimeout(() => {\n          settings.uMix = 0\n          material.uniforms.uMix.value = 0\n          swapTexture(currentIndex, nextIndex)\n\n          tl.play(0)\n        }, 3000)\n      })\n    }\n\n    const update = () => {\n      // mesh.rotation.x += 0.005\n      // mesh.rotation.y += 0.01\n\n      composer.render(scene, camera)\n\n      raf = window.requestAnimationFrame(update)\n\n      time += 1.0\n      material.uniforms.time.value = time\n      material.uniforms.uProgress.value = settings.uProgress\n      material.uniforms.uMix.value = settings.uMix\n    }\n\n    const viewportHandler = () => {\n      setSize()\n      setCameraAspect()\n    }\n\n    onMounted(() => {\n      init()\n      update()\n\n      window.addEventListener('resize', viewportHandler)\n    })\n\n    onUnmounted(() => {\n      gui.destroy()\n      window.cancelAnimationFrame(raf)\n      window.removeEventListener('resize', viewportHandler)\n    })\n\n    return {\n      container,\n    }\n  },\n}\n</script>\n","\nimport gsap from 'gsap'\nimport { onMounted, onUnmounted, ref } from 'vue'\nimport * as THREE from 'three'\nimport t1 from './textures/t1.jpg'\nimport t2 from './textures/t2.jpg'\nimport t3 from './textures/t3.jpg'\nimport dat from 'dat.gui'\n\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js'\n\nimport glsl from 'glslify'\n\n// eslint-disable-next-line\nlet OrbitControls = require('three-orbit-controls')(THREE)\n\nexport default {\n  name: 'WebglComponent',\n  setup() {\n    const container = ref()\n    let time = 0\n    let camera, scene, renderer, geometry, material, mesh\n    let positions, coordinates\n    let textures\n    let gui, settings\n    let raf\n    let mesh2\n    let currentIndex, nextIndex\n    let composer, renderPass, bloomPass\n\n    const setSize = () => {\n      const { width, height } = container.value.getBoundingClientRect()\n\n      renderer.setPixelRatio(window.devicePixelRatio)\n\n      renderer.setSize(width, height)\n      composer.setSize(width, height)\n    }\n\n    const setCameraAspect = () => {\n      const { width, height } = container.value.getBoundingClientRect()\n\n      camera.aspect = width / height\n      camera.updateProjectionMatrix()\n    }\n\n    const swapTexture = (currentIndex, nextIndex) => {\n      material.uniforms.currentTexture.value = textures[currentIndex]\n      material.uniforms.nextTexture.value = textures[nextIndex]\n    }\n\n    const init = () => {\n      settings = {\n        uProgress: 0,\n        uMix: 0,\n        cameraZ: 126,\n        wireframe: false,\n      }\n      gui = new dat.GUI({ name: 'My GUI' })\n      gui.add(settings, 'uProgress', 0, 128, 0.1)\n      gui.add(settings, 'uMix', 0, 1, 0.01)\n      gui.add(settings, 'wireframe').onChange(() => {\n        mesh2.material.wireframe = settings.wireframe\n        mesh2.material.opacity = settings.wireframe ? 1.0 : 0.0\n      })\n      gui.add(settings, 'cameraZ', 0, 300, 1).onChange(() => {\n        camera.position.z = settings.cameraZ\n      })\n\n      const { width, height } = container.value.getBoundingClientRect()\n\n      camera = new THREE.PerspectiveCamera(70, width / height, 0.01, 10000)\n      camera.position.z = settings.cameraZ\n\n      camera.position.z = settings.cameraZ\n\n      scene = new THREE.Scene()\n\n      textures = [\n        new THREE.TextureLoader().load(t1),\n        new THREE.TextureLoader().load(t2),\n        new THREE.TextureLoader().load(t3),\n      ]\n\n      // geometry = new THREE.PlaneBufferGeometry(1.0, 1.0, 10.0, 10.0)\n      geometry = new THREE.BufferGeometry()\n\n      const row = 512\n      const col = 512\n\n      positions = new THREE.BufferAttribute(new Float32Array(row * col * 3), 3)\n      coordinates = new THREE.BufferAttribute(\n        new Float32Array(row * col * 3),\n        3\n      )\n\n      let index = 0\n      for (let i = row / -2.0; i < row / 2; i++) {\n        for (let j = col / -2.0; j < col / 2; j++) {\n          positions.setXYZ(index, i, j, -256.0) // between -256 and 256\n          coordinates.setXYZ(index, (i / 256.0 + 1) / 2, (j / 256 + 1) / 2, 0) // between 0 and 1\n          index++\n        }\n      }\n\n      geometry.setAttribute('position', positions)\n      geometry.setAttribute('aCoordinates', coordinates)\n\n      currentIndex = 0\n      nextIndex = 1\n\n      // material = new THREE.MeshNormalMaterial()\n      material = new THREE.ShaderMaterial({\n        fragmentShader: glsl(require('./glsl/fragment.glsl').default),\n        vertexShader: glsl(require('./glsl/vertex.glsl').default),\n        uniforms: {\n          time: { value: 1.0 },\n          currentTexture: { value: textures[currentIndex] },\n          nextTexture: { value: textures[nextIndex] },\n          uMix: { value: 0.0 },\n          uProgress: { value: null },\n          uBloom: { value: 0 },\n        },\n        side: THREE.DoubleSide,\n        transparent: true,\n      })\n      mesh = new THREE.Points(geometry, material)\n      scene.add(mesh)\n\n      mesh2 = new THREE.Mesh(\n        new THREE.BoxGeometry(512, 512, 512),\n        new THREE.MeshBasicMaterial({\n          opacity: 0.0,\n          transparent: true,\n          wireframe: settings.wireframe,\n        })\n      )\n\n      // scene.add(mesh2)\n\n      renderer = new THREE.WebGLRenderer({ antialias: false, alpha: true })\n      composer = new EffectComposer(renderer)\n\n      renderPass = new RenderPass(scene, camera)\n\n      bloomPass = new UnrealBloomPass(\n        new THREE.Vector2(width, height),\n        0.0,\n        0.5,\n        0.0\n      )\n\n      composer.addPass(renderPass)\n      composer.addPass(bloomPass)\n\n      bloomPass.renderToScreen = true\n\n      // OrbitControls\n      new OrbitControls(camera, renderer.domElement)\n\n      setSize()\n      container.value.appendChild(renderer.domElement)\n\n      const o = {\n        mix: 0,\n        progress: 0,\n      }\n\n      const duration = 1.4\n\n      const tl = gsap.timeline({\n        delay: 2,\n        paused: true,\n        onUpdate: () => {\n          settings.uMix = o.mix\n          settings.uProgress = o.progress\n          gui.updateDisplay()\n        },\n      })\n\n      tl.to(\n        o,\n        {\n          duration: duration / 2,\n          progress: 100,\n          ease: 'power4.easeIn',\n        },\n        '#start'\n      )\n\n      tl.to(\n        bloomPass,\n        {\n          duration: duration / 2,\n          strength: 0.5,\n          ease: 'power4.easeIn',\n        },\n        '#start'\n      )\n\n      tl.to(\n        o,\n        {\n          duration: duration * 1.5,\n          mix: 1,\n          ease: 'power4.easeOut',\n        },\n        `#start+=${duration * 0.2}`\n      )\n\n      tl.to(\n        o,\n        {\n          duration: duration / 2,\n          progress: 0,\n          ease: 'power4.easeOut',\n        },\n        `#start+=${1.5 + duration * 0.75}`\n      )\n\n      tl.to(\n        bloomPass,\n        {\n          duration: duration / 2,\n          strength: 0,\n          ease: 'power4.easeOut',\n        },\n        `#start+=${1.5 + duration * 0.75}`\n      )\n\n      tl.play()\n\n      tl.eventCallback('onComplete', () => {\n        currentIndex = nextIndex\n        nextIndex = currentIndex > textures.length - 2 ? 0 : currentIndex + 1\n\n        setTimeout(() => {\n          settings.uMix = 0\n          material.uniforms.uMix.value = 0\n          swapTexture(currentIndex, nextIndex)\n\n          tl.play(0)\n        }, 3000)\n      })\n    }\n\n    const update = () => {\n      // mesh.rotation.x += 0.005\n      // mesh.rotation.y += 0.01\n\n      composer.render(scene, camera)\n\n      raf = window.requestAnimationFrame(update)\n\n      time += 1.0\n      material.uniforms.time.value = time\n      material.uniforms.uProgress.value = settings.uProgress\n      material.uniforms.uMix.value = settings.uMix\n    }\n\n    const viewportHandler = () => {\n      setSize()\n      setCameraAspect()\n    }\n\n    onMounted(() => {\n      init()\n      update()\n\n      window.addEventListener('resize', viewportHandler)\n    })\n\n    onUnmounted(() => {\n      gui.destroy()\n      window.cancelAnimationFrame(raf)\n      window.removeEventListener('resize', viewportHandler)\n    })\n\n    return {\n      container,\n    }\n  },\n}\n","import { render } from \"./WebglComponent.vue?vue&type=template&id=4d90cc0b&bindings={\\\"container\\\":\\\"setup\\\"}\"\nimport script from \"./WebglComponent.vue?vue&type=script&lang=ts\"\nexport * from \"./WebglComponent.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport WebglComponent from '@/components/WebglComponent.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    WebglComponent,\n  },\n}\n","import { render } from \"./App.vue?vue&type=template&id=c3c8d230&bindings={}\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue'\nimport App from './App.vue'\nimport './styles/main.scss'\n\nimport VueAware from 'vue-aware'\n\nconst app = createApp(App)\n\napp.use(VueAware)\napp.mount('#app')\n","module.exports = __webpack_public_path__ + \"img/t2.d5aa5e43.jpg\";","module.exports = __webpack_public_path__ + \"img/t1.b7c91db2.jpg\";"],"sourceRoot":""}